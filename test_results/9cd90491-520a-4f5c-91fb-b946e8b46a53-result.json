{"name": "test_status_code", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_delete_expense.Test_delete_expense object at 0x000001E22B642480>\n\n    @allure.description(\"VALID request => Checking response status code\")\n    def test_status_code(self):\n        \"\"\"\n        Test the deletion of an expense and check the response status code.\n    \n        Steps:\n        1. Send a valid request to get the full expense list.\n        2. Get a random UID from the list.\n        3. Send a valid request to delete the entry with the selected UID.\n        4. Check if the status code of the response is 204 (No Content).\n        5. Send a valid request to get the full expense list.\n        6. Check that the entry with the specified UID was deleted.\n        \"\"\"\n        expense_uid = Open_api_expense.get_random_expense_uid()\n        result_delete = Open_api_expense.delete_expense(expense_uid)\n>       Checking.check_status_code(result_delete, 204)  # Expected status code: 204 Deleted\n\ntests\\test_delete_expense.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, status_code = 204\n\n    @staticmethod\n    def check_status_code(response, status_code):\n        \"\"\"\n        Check if the response status code matches the expected status code.\n    \n        Args:\n            response (Response): The response object.\n            status_code (int): The expected status code.\n    \n        Returns:\n            None\n        \"\"\"\n>       assert status_code == response.status_code\nE       AssertionError\n\nutils\\checking.py:22: AssertionError"}, "description": "VALID request => Checking response status code", "steps": [{"name": "GET", "status": "passed", "start": 1705354419807, "stop": 1705354419881}, {"name": "DELETE", "status": "passed", "start": 1705354419944, "stop": 1705354420141}], "attachments": [{"name": "stdout", "source": "8192a942-5728-4a39-b68d-bc3b5bbdaf5b-attachment.txt", "type": "text/plain"}], "start": 1705354419807, "stop": 1705354420141, "uuid": "b72b5a24-c7db-4631-a334-d571a3da369d", "historyId": "3839aa1a1707cd3742ad529442d82d4a", "testCaseId": "3839aa1a1707cd3742ad529442d82d4a", "fullName": "tests.test_delete_expense.Test_delete_expense#test_status_code", "labels": [{"name": "epic", "value": "Delete expense method [Delete] v1/expense/{expense_uid}}"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_delete_expense"}, {"name": "subSuite", "value": "Test_delete_expense"}, {"name": "host", "value": "DESKTOP-PE8TFUJ"}, {"name": "thread", "value": "19092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_delete_expense"}]}