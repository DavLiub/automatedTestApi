{"name": "test_expenses_tokens_nonexistent_uid", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_get_expense.Test_get_expense object at 0x000001E22B642F90>\n\n    @allure.description(\"VALID request => Checking tokens for nonexistent uid\")\n    def test_expenses_tokens_nonexistent_uid(self):\n        \"\"\"\n        Test a valid GET request for an expense entry with a nonexistent UID and check the error tokens.\n    \n        Steps:\n        1. Send a valid GET request for the expense entry with UID = \"333\" (nonexistent UID).\n        2. Check if the response contains the expected error tokens: ['message', 'status', 'description'].\n        \"\"\"\n        result_get_expense = Open_api_expense.get_expense_by_uid(\"333\")\n>       Checking.check_json_token(result_get_expense, ['message', 'status', 'description'])\n\ntests\\test_get_expense.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_value = ['message', 'status', 'description']\n\n    @staticmethod\n    def check_json_token(response, expected_value):\n        \"\"\"\n        Check if all required fields are present in the JSON response.\n    \n        Args:\n            response (Response): The response object.\n            expected_value (list): List of expected fields.\n    \n        Returns:\n            None\n        \"\"\"\n        token = json.loads(response.text)\n>       assert list(token) == expected_value\nE       AssertionError\n\nutils\\checking.py:39: AssertionError"}, "description": "VALID request => Checking tokens for nonexistent uid", "steps": [{"name": "GET", "status": "passed", "start": 1705354420513, "stop": 1705354420550}], "attachments": [{"name": "stdout", "source": "458f6e62-a7e6-47ab-abf7-3c3a986bb025-attachment.txt", "type": "text/plain"}], "start": 1705354420513, "stop": 1705354420550, "uuid": "31d6e060-ac6d-4a49-ace6-306db2574690", "historyId": "2e7617a6d13d9d8a393846a865f529b9", "testCaseId": "2e7617a6d13d9d8a393846a865f529b9", "fullName": "tests.test_get_expense.Test_get_expense#test_expenses_tokens_nonexistent_uid", "labels": [{"name": "epic", "value": "Get expense method [GET] v1/expense/{expense_uid}}"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_expense"}, {"name": "subSuite", "value": "Test_get_expense"}, {"name": "host", "value": "DESKTOP-PE8TFUJ"}, {"name": "thread", "value": "19092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_expense"}]}