{"name": "test_json_tokens", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_get_list.Test_get_expense_list_valid_request object at 0x000001E22B643980>\n\n    @allure.description(\"VALID request (without options) tokens\")\n    def test_json_tokens(self):\n        \"\"\"\n        Test validation Tokens.\n        1. Send valid request.\n        2. Checking tokens = ['expenses', 'meta'].\n        \"\"\"\n        result_get_list = Open_api_expense.get_expense_list()\n>       Checking.check_json_token(result_get_list, ['expenses', 'meta'])\n\ntests\\test_get_list.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, expected_value = ['expenses', 'meta']\n\n    @staticmethod\n    def check_json_token(response, expected_value):\n        \"\"\"\n        Check if all required fields are present in the JSON response.\n    \n        Args:\n            response (Response): The response object.\n            expected_value (list): List of expected fields.\n    \n        Returns:\n            None\n        \"\"\"\n        token = json.loads(response.text)\n>       assert list(token) == expected_value\nE       AssertionError\n\nutils\\checking.py:39: AssertionError"}, "description": "VALID request (without options) tokens", "steps": [{"name": "GET", "status": "passed", "start": 1705354420583, "stop": 1705354420627}], "attachments": [{"name": "stdout", "source": "25625764-f0df-43c3-9eff-8bd2804371c7-attachment.txt", "type": "text/plain"}], "start": 1705354420583, "stop": 1705354420627, "uuid": "f6c7fab0-00e9-4142-8aa8-ac9b5a030751", "historyId": "40c8de5468ed6b359ad28fae21fdeb43", "testCaseId": "40c8de5468ed6b359ad28fae21fdeb43", "fullName": "tests.test_get_list.Test_get_expense_list_valid_request#test_json_tokens", "labels": [{"name": "epic", "value": "Get expense method [GET] v1/expense (without options)"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_list"}, {"name": "subSuite", "value": "Test_get_expense_list_valid_request"}, {"name": "host", "value": "DESKTOP-PE8TFUJ"}, {"name": "thread", "value": "19092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_list"}]}